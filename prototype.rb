TEMPLATE_PATH = File.expand_path(File.dirname(__FILE__))
def source_paths
  [TEMPLATE_PATH]
end

#
# Setup and launch Postgres via Docker/Compose
#
template 'docker-compose.yml'
# run "docker-compose up -d; echo \"Waiting for postgres...\"; sleep 5"
run "docker-compose up -d"

#
# Configure Postgres
#
remove_file 'config/database.yml'
template 'config/databases/postgresql.yml', 'config/database.yml'

#
# Add default gems
#
gem 'devise'
gem 'pundit'
gem 'activeadmin'
# graphql
gem_group :development, :test do
  gem 'solargraph'
end

#
# Configure ENV defaults
#
environment "config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }", env: 'development'

after_bundle do
  #
  # Run additional generators, installers, etc.
  #
  generate 'devise:install'
  generate 'pundit:install'

  # the active_admin generator runs the devise generator automatically
  generate "active_admin:install User #{webpack_install? ? '--use-webpacker' : ''}"
  # doing it this way doesn't configure the initializer, seed an admin user, nor generate the resource
  # generate 'devise User'
  # generate "active_admin:install --skip-users #{webpack_install? ? '--use-webpacker' : ''}"

  # create default pundit policies
  template 'app/policies/authenticated_policy.rb'
  template 'app/policies/admin_policy.rb' # TODO actually check for admin once roles/perms are in place
  template 'app/policies/public_policy.rb'
  template 'app/policies/user_policy.rb'
  template 'app/policies/admin/user_policy.rb'
  template 'app/policies/active_admin/page_policy.rb'
  template 'app/policies/active_admin/comment_policy.rb'

  # configure devise routes generated by active_admin to be more generic for all users
  gsub_file 'config/routes.rb',
    /devise_for :users, ActiveAdmin::Devise\.config/,
    'devise_for :users'


  # TODO use inject_into_file instead
  # configure active_admin to use pundit
  gsub_file 'config/initializers/active_admin.rb',
    /# config\.authorization_adapter = ActiveAdmin::CanCanAdapter/,
    'config.authorization_adapter = ActiveAdmin::PunditAdapter'

  gsub_file 'config/initializers/active_admin.rb',
    /# config\.pundit_default_policy = "MyDefaultPunditPolicy"/,
    'config.pundit_default_policy = "AdminPolicy"'

  gsub_file 'config/initializers/active_admin.rb',
    /# config\.pundit_policy_namespace = :admin/,
    'config.pundit_policy_namespace = :admin'

  #
  # Setup the application database
  #
  rails_command("db:create db:migrate db:seed", abort_on_failure: true)

  #
  # Commit initial app repo
  #
  git add: "."
  git commit: %Q{ -m 'Initial commit of #{app_name}' }
end