module Devise
  module JWT
    extend self

    def encode(payload, expiration = nil)
      expiration ||= ENV.fetch('JWT_EXP_HOURS', 1)

      payload = payload.dup
      payload["exp"] = expiration.to_i.hours.from_now.to_i
      # TODO set exp/nbf, iss/dest, aud/sub...

      ::JWT.encode payload, ENV.fetch('JWT_SECRET'), 'HS256'
    end

    def decode(token, **opts)
      opts = { algorithm: 'HS256' }.merge(opts)
      decoded_token = ::JWT.decode token, ENV.fetch('JWT_SECRET'), true, **opts

      # TODO validate exp/nbf, iss/dest, aud/sub...
      decoded_token.first
    rescue
      nil
    end
  end
end